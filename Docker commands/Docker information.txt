BASIC COMMANDS:
--------------
To check the docker version:
docker -version 
(or)
docker -v

To display docker info:
docker info

To get help about cmds:
docker --help

To login to docker:
docker login

***********************************
IMAGE COMMANDS:
---------------
To download the images from docker hub:
docker pull ubuntu
docker pull <imagename>

To display the available images:
docker images

To remove the images:
docker rmi <imagename>

********************************

CONTAINER COMMANDS:
--------------------
To download the images from docker:
docker pull <imagename>
e.g.., docker pull selenium/node-chrome

To create the container when images already downloaded:
docker run <imagename>

If images not downloaded, above cmd will download the images first then create the container in 1 shot...

To start the created container:
docker start  <contid>

To stop the running container:
docker stop <contid>

To remove the container: (Make sure no container in running condition):
docker rmi <contid or name>

To list the running containers:
docker ps

To remove the multiple containers:
docker system prune -f

**************************************
SYSTEM COMMANDS:
----------------
To check how much memory container use:
docker stats

To check how many system & images exists:
docker system df

**************************************
To create/run the containers & to connect to single grid:
docker network create grid
grid = <gridname> can be anything...


Run below commands...

docker run -d -p 4442-4444:4442-4444 --net grid --name selenium-hub selenium/hub


docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub -e SE_EVENT_BUS_PUBLISH_PORT=4442 -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443  selenium/node-chrome

docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub -e SE_EVENT_BUS_PUBLISH_PORT=4442 -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443  selenium/node-firefox

docker run -d --net grid -e SE_EVENT_BUS_HOST=selenium-hub -e SE_EVENT_BUS_PUBLISH_PORT=4442 -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443  selenium/node-edge


Now run the docker ps, it will display running containers.

Then mention the os & browser in testing.xml file & run from there.
*******************************************




